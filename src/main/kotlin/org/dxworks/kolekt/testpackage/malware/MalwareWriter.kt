package org.dxworks.kolekt.testpackage.malware

import org.dxworks.kolekt.testpackage.detector.MalwareDetector

class MalwareWriter : GenericMalwareWriter() {
    val s = "sd"

    @Override
    @Deprecated("Use the other method")
    override fun writeMalware() {
        val wow: String = "Wow"
        val malware: String = "Wow"
        println(malware + wow)
    }

    fun writeMalwareWithParameters(x: String, y: String) {
        println(x + y)
    }

    fun somethingWeird(mld: MalwareDetector) {
    }

    private inline fun calculate(a: Int, b: Int): Int {
        return a + b
    }

    fun initializeInt() : Int {
        return 0
    }

    fun makeCoolStuff(): AmazingMalware  {
        val x = 5
        val y = 6
        val z = calculate(x, y)
        return AmazingMalware()
    }

}

fun writeMalwareOutside(x: String, y: String) : AmazingMalware {
    println(x + y)
    return AmazingMalware()
}